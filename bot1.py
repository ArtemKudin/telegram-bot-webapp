from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.utils import executor
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
API_TOKEN = os.getenv("API_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("üì¶ –ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–∑", callback_data="order_pickup"),
        InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders"),
        InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø–æ–º–æ—â—å", callback_data="info_help")
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–∑"
@dp.callback_query_handler(lambda c: c.data == "order_pickup")
async def order_pickup(callback_query: types.CallbackQuery):
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    web_app_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url="https://artemkudin.github.io/telegram-bot-webapp/"))]
    ])
    await bot.send_message(
        callback_query.from_user.id,
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞ —á–µ—Ä–µ–∑ –Ω–∞—à–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=web_app_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –∑–∞–∫–∞–∑—ã"
@dp.callback_query_handler(lambda c: c.data == "my_orders")
async def my_orders(callback_query: types.CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–∫–∞–∑–æ–≤ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞)
    orders = []  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    if not orders:
        await bot.send_message(
            callback_query.from_user.id,
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."
        )
    else:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–∫–∞–∑—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö —Å–ø–∏—Å–æ–∫
        await bot.send_message(callback_query.from_user.id, "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:\n" + "\n".join(orders))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø–æ–º–æ—â—å"
@dp.callback_query_handler(lambda c: c.data == "info_help")
async def info_help(callback_query: types.CallbackQuery):
    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    message_text = (
        "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç,\n\n"
        "–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ –±–æ–ª–µ–µ 15 –ª–µ—Ç. –ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è –º—ã –Ω–∞–∫–æ–ø–∏–ª–∏ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∑–∞–∫–∞–∑—á–∏–∫–æ–º –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º.\n\n"
        "–í —Ü–µ–ª—è—Ö –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –º—ã —Å–æ–∑–¥–∞–ª–∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –∫ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–º —Å–≤–æ–∏ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã.\n\n"
        "–ú—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã –∫ –¥–∏–∞–ª–æ–≥—É –∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ.\n\n"
        "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\nEcoService\n\n"
        "P.S. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:"
    )
    # –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="@ngKANEKI", url="https://t.me/ngKANEKI")]
    ])
    await bot.send_message(
        callback_query.from_user.id,
        message_text,
        reply_markup=keyboard
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
